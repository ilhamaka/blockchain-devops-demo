// REMPLACER TOUT LE FICHIER par :
const { Counter, Wallet } = require('./blockchain.js');

console.log("üß™ LANCEMENT DES TESTS BLOCKCHAIN...");
console.log("=====================================");

// Test 1: Compteur simple
try {
  const counter = new Counter();
  console.log("‚úÖ Test 1 - Valeur initiale:", counter.getCount());
  
  counter.increment();
  const newValue = counter.getCount();
  console.log("‚úÖ Test 1 - Apr√®s incr√©ment:", newValue);
  
  // V√âRIFICATION CRITIQUE
  if (newValue === 1) {
    console.log("‚úÖ TEST COMPTEUR - R√âUSSI");
  } else {
    console.log("‚ùå TEST COMPTEUR - √âCHEC");
    process.exit(1);
  }
} catch (error) {
  console.log("‚ùå TEST COMPTEUR - ERREUR:", error.message);
  process.exit(1);
}

// Test 2: Portefeuille
try {
  const wallet = new Wallet();
  wallet.deposit(100);
  wallet.withdraw(30);
  const balance = wallet.deposit(50);
  
  console.log("‚úÖ Test 2 - Solde final portefeuille:", balance);
  
  if (balance === 120) {
    console.log("‚úÖ TEST PORTEFEUILLE - R√âUSSI");
  } else {
    console.log("‚ùå TEST PORTEFEUILLE - √âCHEC");
    process.exit(1);
  }
} catch (error) {
  console.log("‚ùå TEST PORTEFEUILLE - ERREUR:", error.message);
  process.exit(1);
}

console.log("=====================================");
console.log("üéâ TOUS LES TESTS SONT PASS√âS !");
console.log("üöÄ Pr√™t pour le d√©ploiement en production");